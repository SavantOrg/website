---
interface Props {
  title: string;
  body: string;
  href: string;
}

const { href, title, body } = Astro.props;
---

<a href={href} class="card">
  <div class="card-content">
    <h2>{title}</h2>
    <p>{body}</p>
    <span class="learn-more">Learn more &rarr;</span>
  </div>
  <svg class="card-bg" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
    <path fill="var(--primary)" d="M44.7,-76.4C58.8,-69.2,71.8,-59.1,79.6,-45.8C87.4,-32.6,90,-16.3,89.1,-0.5C88.1,15.3,83.5,30.6,75.2,43.9C66.9,57.3,54.8,68.7,40.9,76.6C27.1,84.5,13.6,88.9,-0.4,89.6C-14.3,90.3,-28.6,87.3,-41.9,80.7C-55.1,74.1,-67.3,64,-76.3,51.1C-85.3,38.2,-91.1,22.4,-92.6,6.1C-94.1,-10.1,-91.4,-26.8,-84.3,-41.2C-77.1,-55.6,-65.6,-67.7,-51.6,-75C-37.6,-82.3,-21.3,-84.8,-4.9,-77.2C11.5,-69.6,30.5,-83.6,44.7,-76.4Z" transform="translate(100 100)">
      <animateTransform
        attributeName="transform"
        type="rotate"
        from="0 100 100"
        to="360 100 100"
        dur="30s"
        repeatCount="indefinite"
      />
    </path>
  </svg>
</a>

<style>
  .card {
    position: relative;
    list-style: none;
    display: flex;
    flex-direction: column;
    padding: 1rem;
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    height: 200px;
    text-decoration: none;
    color: var(--text);
    overflow: hidden;
  }
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }
  .card-content {
    position: relative;
    z-index: 1;
  }
  h2 {
    margin: 0;
    font-size: 1.421rem;
    color: var(--primary);
  }
  p {
    margin: 0.5rem 0 1rem;
    font-size: 0.8rem;
  }
  .learn-more {
    color: var(--accent);
    font-size: 0.8rem;
    margin-top: auto;
  }
  .card-bg {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 150%;
    height: 150%;
    transform: translate(-50%, -50%);
    opacity: 0.1;
    z-index: 0;
  }
</style>